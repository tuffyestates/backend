openapi:                       3.0.0
info:
  title:                       Tuffy Estates
  version:                     0.1.0
servers:
  - url:                       http://localhost:11638/api
    description:               Local Development Server
  - url:                       https://tuffyestates.sparling.us:11638/api
    description:               Staging Server
  - url:                       https://tuffyestates.sparling.us:11637/api
    description:               Development Server
tags:
  - name:                      users
    description:               "Everything about users"
paths:
  /users:
    post:
      tags:                    [users]
      summary:                 Registers a user
      operationId:             registerUser
      requestBody:
        required:              true
        content:
          multipart/form-data:
            schema:
              $ref:            '#/components/schemas/User'
      responses:
        201:
          description:         User registered
        400:
          description:         Bad request
          content:
            application/json:
              schema:
                $ref:          '#/components/schemas/Error'
  /users/login:
    get:
      tags:                    [users]
      summary:                 Authenticate a user
      operationId:             loginUser
      parameters:
        - name:                username
          in:                  query
          required:            true
          description:         Username used to authenticate the user
          schema:
            type:              string
        - name:                password
          in:                  query
          required:            true
          description:         Password used to authenticate the user
          schema:
            type:              string
      responses:
        200:
          description:         Session token authenticated
        400:
          description:         Bad request
          content:
            application/json:
              schema:
                $ref:          '#/components/schemas/Error'
  /users/logout:
    head:
      tags:                    [users]
      summary:                 Deauthenticate a user
      operationId:             logoutUser
      responses:
        200:
          description:         Session token revoked
        400:
          description:         Bad request
          content:
            application/json:
              schema:
                $ref:          '#/components/schemas/Error'
      security:
        - BearerAuth:          []

components:
  securitySchemes:
    BearerAuth:
      type:                    http
      scheme:                  bearer
  schemas:
    User:
      type:                    object
      required:                [username, password]
      properties:
        username:
          type:                string
          description:         Username for the user
        password:
          type:                string
          description:         Password for the user
    Message:
      type:                    object
      required:                [text, author, recipient]
      properties:
        text:
          type:                string
          description:         Message contents
        author:
          type:                string
          x-mongoose-type:     ObjectId
          description:         Id of user that authored the message
        recipient:
          type:                string
          x-mongoose-type:     ObjectId
          description:         Id of user that received the message
    Listing:
      type:                    object
      required:                [address, details]
      properties:
        address:
          type:                string
          description:         Listing's physical address
        details:
          type:                object
          description:         More details about a listing
          required:            [price, size]
          properties:
            price:
              type:            number
              description:     Price of the listing in USD
            size:
              type:            number
              description:     Size of the listing in squarefeet
            features:
              type:            array
              description:     Features of the listing
              items:
                $ref:          '#/components/schemas/Feature'
    Feature:
      type:                    string
      enum:                    [office, garage, fireplace, pool, ecofriendly]
    Error:
      type:                    object
      properties:
        error:
          description:         Human readable error message
          type:                string
