openapi: 3.0.0
info:
  title: Tuffy Estates
  version: 0.1.0
servers:
  - url: http://localhost:11638/api
    description: Local Development Server
  - url: https://tuffyestates.sparling.us:11638/api
    description: Staging Server
  - url: https://tuffyestates.sparling.us:11637/api
    description: Development Server
tags:
  - name: user
    description: "Everything about users"
paths:
  /user:
    post:
      tags:
        - user
      summary: Registers a user
      operationId: "registerUser"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User registered
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/login:
    get:
      tags:
        - user
      summary: Authenticate a user
      operationId: "loginUser"
      parameters:
        - name: username
          in: query
          required: true
          description: Username used to authenticate the user
          schema:
            type: string
        - name: password
          in: query
          required: true
          description: Password used to authenticate the user
          schema:
            type: string
      responses:
        200:
          description: User logged in
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/logout:
    get:
      tags:
        - user
      summary: Deauthenticate a user
      operationId: "logoutUser"
      responses:
        200:
          description: User logged out
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
      User:
        type: object
        properties:
          username:
            type: string
            description: Username for the user
          password:
            type: string
            description: Password for the user
        required:
         - username
         - password
      Error:
        type: object
        properties:
          error:
            type: string
